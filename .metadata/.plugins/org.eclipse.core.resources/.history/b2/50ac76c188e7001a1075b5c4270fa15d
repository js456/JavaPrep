package graphs;

public class DisjointSetDetectCycle {

}


class Edge{
	int src,dest;
}

class Graph{
	int V,E;
	Edge []edges;
	
	public Graph(int v, int e) {
		edges = new Edge[e];
		this.E= e;
		this.V= v;
		for(int i=0;i<e;i++) {
			edges[i]= new Edge();
		}
	}
	
    // A utility function to find the subset of an element i 
    int find(int parent[], int i) 
    { 
        if (parent[i] == -1) 
            return i; 
        return find(parent, parent[i]); 
    } 
  
    // A utility function to do union of two subsets 
    void Union(int parent[], int x, int y) 
    { 
        int xset = find(parent, x); 
        int yset = find(parent, y); 
        parent[xset] = yset; 
    }
}